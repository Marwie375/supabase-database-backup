

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


CREATE EXTENSION IF NOT EXISTS "pg_cron" WITH SCHEMA "pg_catalog";






COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";





SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."account_history" (
    "id" integer NOT NULL,
    "date" timestamp with time zone,
    "net_liquidation" real,
    "unrealized_pnl" real,
    "realized_pnl" real,
    "total_cash_balance" real,
    "buying_power" real,
    "init_margin_req" real,
    "maint_margin_req" real,
    "trader_id" smallint,
    "updated_at" timestamp without time zone
);


ALTER TABLE "public"."account_history" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."account_history_dev" (
    "id" integer NOT NULL,
    "date" timestamp with time zone,
    "net_liquidation" real,
    "unrealized_pnl" real,
    "realized_pnl" real,
    "total_cash_balance" real,
    "buying_power" real,
    "init_margin_req" real,
    "maint_margin_req" real,
    "trader_id" smallint,
    "updated_at" timestamp without time zone
);


ALTER TABLE "public"."account_history_dev" OWNER TO "postgres";


ALTER TABLE "public"."account_history_dev" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."account_history_dev_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE "public"."account_history" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."account_history_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."ah" (
    "id" integer NOT NULL,
    "date" timestamp with time zone,
    "net_liquidation" real,
    "unrealized_pnl" real,
    "realized_pnl" real,
    "total_cash_balance" real,
    "buying_power" real,
    "init_margin_req" real,
    "maint_margin_req" real,
    "trader_id" smallint,
    "updated_at" timestamp without time zone
);


ALTER TABLE "public"."ah" OWNER TO "postgres";


ALTER TABLE "public"."ah" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."ah_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."eq" (
    "id" integer NOT NULL,
    "trader_id" smallint,
    "date" "date",
    "equity" integer
);


ALTER TABLE "public"."eq" OWNER TO "postgres";


ALTER TABLE "public"."eq" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."eq_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."prices" (
    "id" bigint NOT NULL,
    "symbol" "text",
    "date" "date",
    "open" real,
    "high" real,
    "low" real,
    "close" real,
    "volume" bigint,
    "realclose" real,
    "dividend" real,
    "updated_at" timestamp without time zone
);


ALTER TABLE "public"."prices" OWNER TO "postgres";


ALTER TABLE "public"."prices" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."prices_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE ONLY "public"."ah"
    ADD CONSTRAINT "ah_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."eq"
    ADD CONSTRAINT "eq_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."prices"
    ADD CONSTRAINT "prices_pkey" PRIMARY KEY ("id");



CREATE POLICY "Enable delete for anon" ON "public"."ah" FOR DELETE TO "anon" USING (true);



CREATE POLICY "Enable delete for anon" ON "public"."eq" FOR DELETE TO "anon" USING (true);



CREATE POLICY "Enable delete for anon" ON "public"."prices" FOR DELETE TO "anon" USING (true);



CREATE POLICY "Enable insert for anon" ON "public"."ah" FOR INSERT TO "anon" WITH CHECK (true);



CREATE POLICY "Enable insert for anon" ON "public"."eq" FOR INSERT TO "anon" WITH CHECK (true);



CREATE POLICY "Enable insert for anon" ON "public"."prices" FOR INSERT TO "anon" WITH CHECK (true);



CREATE POLICY "Enable read access for all users" ON "public"."ah" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."eq" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."prices" FOR SELECT USING (true);



CREATE POLICY "Enable update for anon" ON "public"."ah" FOR UPDATE TO "anon" USING (true) WITH CHECK (true);



CREATE POLICY "Enable update for anon" ON "public"."eq" FOR UPDATE TO "anon" USING (true) WITH CHECK (true);



CREATE POLICY "Enable update for anon" ON "public"."prices" FOR UPDATE TO "anon" USING (true) WITH CHECK (true);



ALTER TABLE "public"."account_history" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."account_history_dev" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."ah" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."eq" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."prices" ENABLE ROW LEVEL SECURITY;




ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";





GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";



































































































































































































GRANT ALL ON TABLE "public"."account_history" TO "anon";
GRANT ALL ON TABLE "public"."account_history" TO "authenticated";
GRANT ALL ON TABLE "public"."account_history" TO "service_role";



GRANT ALL ON TABLE "public"."account_history_dev" TO "anon";
GRANT ALL ON TABLE "public"."account_history_dev" TO "authenticated";
GRANT ALL ON TABLE "public"."account_history_dev" TO "service_role";



GRANT ALL ON SEQUENCE "public"."account_history_dev_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."account_history_dev_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."account_history_dev_id_seq" TO "service_role";



GRANT ALL ON SEQUENCE "public"."account_history_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."account_history_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."account_history_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."ah" TO "anon";
GRANT ALL ON TABLE "public"."ah" TO "authenticated";
GRANT ALL ON TABLE "public"."ah" TO "service_role";



GRANT ALL ON SEQUENCE "public"."ah_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."ah_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."ah_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."eq" TO "anon";
GRANT ALL ON TABLE "public"."eq" TO "authenticated";
GRANT ALL ON TABLE "public"."eq" TO "service_role";



GRANT ALL ON SEQUENCE "public"."eq_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."eq_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."eq_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."prices" TO "anon";
GRANT ALL ON TABLE "public"."prices" TO "authenticated";
GRANT ALL ON TABLE "public"."prices" TO "service_role";



GRANT ALL ON SEQUENCE "public"."prices_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."prices_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."prices_id_seq" TO "service_role";









ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "service_role";






























RESET ALL;
